!function(){"use strict";class e{constructor(e,t,s){this._title=e.name,this._link=e.link,this._cardSelector=t,this._onImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".place__item").cloneNode(!0)}_handleDeleteCardButton(){this._element.remove(),this._element=null}_handleLikeButton(){this._element.querySelector(".place__btn-hart").classList.toggle("place__btn-hart_active")}_handlePreviewImage(){this._onImageClick({link:this._link,title:this._title})}_setEventListeners(){this._element.querySelector(".place__btn-trash").addEventListener("click",(()=>this._handleDeleteCardButton())),this._element.querySelector(".place__btn-hart").addEventListener("click",(()=>this._handleLikeButton())),this._element.querySelector(".place__image").addEventListener("click",(()=>this._handlePreviewImage()))}generateCard(){this._element=this._getTemplate();const e=this._element.querySelector(".place__image");return this._element.querySelector(".place__text").textContent=this._title,e.src=this._link,e.alt=this._title,this._setEventListeners(),this._element}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorMessageClass=e.errorMessageClass,this._button=t.querySelector(this._submitButtonSelector),this.formElement=t,this._element=Array.from(t.querySelectorAll(this._inputSelector))}_hideInputError(e){const t=this.formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorMessageClass),t.textContent=""}_showInputError(e){const t=this.formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.classList.add(this._errorMessageClass),t.textContent=e.validationMessage}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_isFormValid(){return this._element.some((e=>!e.validity.valid))}_toggleButtonState(){this._isFormValid()?(this._button.disabled=!0,this._button.classList.add(this._inactiveButtonClass)):(this._button.disabled=!1,this._button.classList.remove(this._inactiveButtonClass))}_setEventListeners(){this._element.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._element.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}enableValidation(){this.formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(),this._toggleButtonState()}}const s={formSelector:".popup__form",inputSelector:".popup__input-text",submitButtonSelector:".popup__btn",inactiveButtonClass:"popup__btn_inactive",inputErrorClass:"popup__error",errorMessageClass:"popup__input-error_active"};class n{constructor(e){this.popupElement=document.querySelector(e),this._handleEscUp=this._handleEscUp.bind(this),this.close=this.close.bind(this),this.open=this.open.bind(this)}_handleEscUp(e){e.preventDefault(),"Escape"===e.key&&this.close()}setEventListeners(){this.popupElement.querySelector(".popup__btn-close").addEventListener("click",this.close),this.popupElement.addEventListener("mousedown",(e=>{e.target===this.popupElement&&this.close()}))}open(){this.popupElement.classList.add("popup_active"),document.addEventListener("keyup",this._handleEscUp)}close(){this.popupElement.classList.remove("popup_active"),document.removeEventListener("keyup",this._handleEscUp)}}function i(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r extends n{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),i(this,"_formSubmit",(()=>{this._handleFormSubmit(this._getInputValues())})),i(this,"close",(()=>{super.close(),this._form.reset()})),this._handleFormSubmit=s,this._form=this.popupElement.querySelector(".form")}_getInputValues(){const e=[...this._form.querySelectorAll(".popup__input-text")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(()=>this._formSubmit()))}setFormData(e){[...this._form.querySelectorAll(".popup__input-text")].forEach((t=>{t.value=e[t.name]}))}}const o=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;var n,i;i=e=>{this._nameElement.textContent=e.userName,this._jobElement.textContent=e.userTitle},(n="setUserInfo")in this?Object.defineProperty(this,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[n]=i,this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return{userName:this._nameElement.textContent,userTitle:this._jobElement.textContent}}}({nameSelector:".profile__name",jobSelector:".profile__title"}),l=t=>new e(t,"#place-template",(()=>{c.open(t)})).generateCard(),a=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>a.addItem(l(e))},".photo-grid"),c=new class extends n{constructor(){var e,t;super(...arguments),t=e=>{let{link:t,name:s}=e;const n=this.popupElement.querySelector(".popup__description"),i=this.popupElement.querySelector(".popup__img");i.src=t,i.alt=s,n.textContent=s,super.open()},(e="open")in this?Object.defineProperty(this,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):this.open=t}}(".popup-preview"),p=new r({popupSelector:"#popup",handleFormSubmit:e=>{p.close(),o.setUserInfo(e)}}),u=new r({popupSelector:".popup_add_place",handleFormSubmit:e=>{a.addItem(l(e)),u.close()}});a.renderItems();const h=new t(s,p.popupElement),_=new t(s,u.popupElement);c.setEventListeners(),p.setEventListeners(),u.setEventListeners(),h.enableValidation(),_.enableValidation();const d=document.querySelector(".profile__btn-edit"),m=document.querySelector(".profile__btn-add");d.addEventListener("click",(()=>{p.open(),p.setFormData(o.getUserInfo()),h.resetValidation()})),m.addEventListener("click",(()=>{u.open(),_.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBV3BHLElBQzdCc0gsRUFBYTdDLFdBR2pCNkIsRUFBVU8sY0FFVixNQUFNVSxFQUF1QixJQUFJekYsRUFBY0MsRUFBVXFGLEVBQWM5QyxjQUNqRWtELEVBQXFCLElBQUkxRixFQUFjQyxFQUFVdUYsRUFBYWhELGNBR3BFK0IsRUFBV3pCLG9CQUNYd0MsRUFBY3hDLG9CQUNkMEMsRUFBYTFDLG9CQUViMkMsRUFBcUJ2RCxtQkFDckJ3RCxFQUFtQnhELG1CQUVuQixNQUFNeUQsRUFBa0I5RyxTQUFTQyxjQUFjLHNCQUN6QzhHLEVBQWdCL0csU0FBU0MsY0FBYyxxQkFPN0M2RyxFQUFnQmpHLGlCQUFpQixTQU5MLEtBQzFCNEYsRUFBYzFDLE9BQ2QwQyxFQUFjekIsWUFBWUMsRUFBU08sZUFDbkNvQixFQUFxQnpELHFCQVN2QjRELEVBQWNsRyxpQkFBaUIsU0FKUixLQUNuQjhGLEVBQWE1QyxPQUNiOEMsRUFBbUIxRCxxQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0XzQtbWFpbi8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC1tYWluLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80LW1haW4vLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQtbWFpbi8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQtbWFpbi8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC1tYWluLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQtbWFpbi8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQtbWFpbi8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC1tYWluLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKGRhdGEsIGNhcmRTZWxlY3Rvciwgb25JbWFnZUNsaWNrKSB7XG4gICAgdGhpcy5fdGl0bGUgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcblxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcblxuICAgIHRoaXMuX29uSW1hZ2VDbGljayA9IG9uSW1hZ2VDbGljaztcbiAgfVxuXG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGRvY3VtZW50XG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlX19pdGVtXCIpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50O1xuICB9XG5cbiAgX2hhbmRsZURlbGV0ZUNhcmRCdXR0b24oKSB7XG4gICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcbiAgICB0aGlzLl9lbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gIF9oYW5kbGVMaWtlQnV0dG9uKCkge1xuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLnBsYWNlX19idG4taGFydFwiKVxuICAgICAgLmNsYXNzTGlzdC50b2dnbGUoXCJwbGFjZV9fYnRuLWhhcnRfYWN0aXZlXCIpO1xuICB9XG5cbiAgX2hhbmRsZVByZXZpZXdJbWFnZSgpIHtcbiAgICB0aGlzLl9vbkltYWdlQ2xpY2soeyBsaW5rOiB0aGlzLl9saW5rLCB0aXRsZTogdGhpcy5fdGl0bGUgfSk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fZWxlbWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2J0bi10cmFzaFwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLl9oYW5kbGVEZWxldGVDYXJkQnV0dG9uKCkpO1xuXG4gICAgdGhpcy5fZWxlbWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2J0bi1oYXJ0XCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX2hhbmRsZUxpa2VCdXR0b24oKSk7XG5cbiAgICB0aGlzLl9lbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9faW1hZ2VcIilcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5faGFuZGxlUHJldmlld0ltYWdlKCkpO1xuICB9XG5cbiAgZ2VuZXJhdGVDYXJkKCkge1xuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIGNvbnN0IGNhcmRJbWcgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGxhY2VfX2ltYWdlXCIpO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGFjZV9fdGV4dFwiKS50ZXh0Q29udGVudCA9IHRoaXMuX3RpdGxlO1xuICAgIGNhcmRJbWcuc3JjID0gdGhpcy5fbGluaztcbiAgICBjYXJkSW1nLmFsdCA9IHRoaXMuX3RpdGxlO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKHNldHRpbmdzLCBmb3JtRWxlbWVudCkge1xuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBzZXR0aW5ncy5pbnB1dFNlbGVjdG9yO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzO1xuICAgIHRoaXMuX2Vycm9yTWVzc2FnZUNsYXNzID0gc2V0dGluZ3MuZXJyb3JNZXNzYWdlQ2xhc3M7XG4gICAgdGhpcy5fYnV0dG9uID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG4gICAgdGhpcy5mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICAgIHRoaXMuX2VsZW1lbnQgPSBBcnJheS5mcm9tKFxuICAgICAgZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKVxuICAgICk7XG4gIH1cblxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yTWVzc2FnZUNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICB9XG5cbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxuICAgICk7XG4gICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvck1lc3NhZ2VDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xuICB9XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcbiAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH1cbiAgfVxuXG4gIF9pc0Zvcm1WYWxpZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIHJldHVybiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkO1xuICAgIH0pO1xuICB9XG5cbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xuICAgIGlmICh0aGlzLl9pc0Zvcm1WYWxpZCgpKSB7XG4gICAgICB0aGlzLl9idXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgdGhpcy5fYnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2J1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgdGhpcy5fYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgfVxuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2VsZW1lbnQuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9lbGVtZW50LmZvckVhY2goKGlucHV0TGlzdCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRMaXN0KTtcbiAgICB9KTtcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICB9XG5cbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLmZvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSk7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICB9XG59XG4iLCJleHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xuICB7XG4gICAgbmFtZTogXCJZb3NlbWl0ZSBWYWxsZXlcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3lvc2VtaXRlLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFrZS1sb3Vpc2UuanBnXCIsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkJhbGQgTW91bnRhaW5zXCIsXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9iYWxkLW1vdW50YWlucy5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGF0ZW1hci5qcGdcIixcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXG4gICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS92YW5vaXNlLmpwZ1wiLFxuICB9LFxuICB7XG4gICAgbmFtZTogXCJMYWdvIGRpIEJyYWllc1wiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFnby5qcGdcIixcbiAgfSxcbl07XG5cbmV4cG9ydCBjb25zdCBzZXR0aW5ncyA9IHtcbiAgZm9ybVNlbGVjdG9yOiBcIi5wb3B1cF9fZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXQtdGV4dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX2J0blwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwX19idG5faW5hY3RpdmVcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19lcnJvclwiLFxuICBlcnJvck1lc3NhZ2VDbGFzczogXCJwb3B1cF9faW5wdXQtZXJyb3JfYWN0aXZlXCIsXG59O1xuXG5leHBvcnQgY29uc3QgcG9wdXBTZXR0aW5ncyA9IHtcbiAgaW1hZ2VXaW5kb3c6IFwiLnBvcHVwLXByZXZpZXdcIixcbiAgZWRpdEZvcm1XaW5kb3c6IFwiI3BvcHVwXCIsXG4gIGNhcmRGcm9tV2luZG93OiBcIi5wb3B1cF9hZGRfcGxhY2VcIixcbn07XG5cbmV4cG9ydCBjb25zdCBwcm9maWxlU2V0dGluZ3MgPSB7XG4gIHByb2ZpbGVUaXRsZTogXCIucHJvZmlsZV9fbmFtZVwiLFxuICBwcm9maWxlRGVzY3JpcHRpb246IFwiLnByb2ZpbGVfX3RpdGxlXCIsXG59O1xuXG5leHBvcnQgY29uc3QgY2FyZHNTZXR0aW5ncyA9IHtcbiAgY2FyZFNlbGVjdG9yOiBcIiNwbGFjZS10ZW1wbGF0ZVwiLFxuICBwbGFjZVNlY3Rpb246IFwiLnBob3RvLWdyaWRcIixcbn07XG5cbmV4cG9ydCBjb25zdCBpbnB1dFZhbHVlSW1hZ2UgPSB7XG4gIHBsYWNlTmFtZTogXCIjaW5wdXQtcGxhY2VcIixcbiAgcGxhY2VMaW5rOiBcIiNpbnB1dC11cmxcIixcbn07IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUVzY1VwID0gdGhpcy5faGFuZGxlRXNjVXAuYmluZCh0aGlzKTtcbiAgICB0aGlzLmNsb3NlID0gdGhpcy5jbG9zZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMub3BlbiA9IHRoaXMub3Blbi5iaW5kKHRoaXMpO1xuICB9XG5cbiAgX2hhbmRsZUVzY1VwKGV2dCkge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fYnRuLWNsb3NlXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmNsb3NlKTtcbiAgICB0aGlzLnBvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChldnQpID0+IHtcbiAgICAgIGlmIChldnQudGFyZ2V0ID09PSB0aGlzLnBvcHVwRWxlbWVudCkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgXG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLnBvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwicG9wdXBfYWN0aXZlXCIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCB0aGlzLl9oYW5kbGVFc2NVcCk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLnBvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfYWN0aXZlXCIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCB0aGlzLl9oYW5kbGVFc2NVcCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQgfSkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLnBvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1cIik7XG4gIH1cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIGNvbnN0IGlucHV0cyA9IFsuLi50aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2lucHV0LXRleHRcIildO1xuICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge307XG5cbiAgICBpbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGlucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XG4gIH1cblxuICBfZm9ybVN1Ym1pdCA9ICgpID0+IHtcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICB9O1xuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsICgpID0+IHRoaXMuX2Zvcm1TdWJtaXQoKSk7XG4gIH1cblxuICBjbG9zZSA9ICgpID0+IHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcbiAgfTtcblxuICBzZXRGb3JtRGF0YShpbnB1dFZhbHVlcykge1xuICAgIGNvbnN0IGlucHV0cyA9IFsuLi50aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIucG9wdXBfX2lucHV0LXRleHRcIildO1xuICAgIGlucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXQudmFsdWUgPSBpbnB1dFZhbHVlc1tpbnB1dC5uYW1lXTtcbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmRcIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCB7XG4gIGluaXRpYWxDYXJkcyxcbiAgc2V0dGluZ3MsXG4gIHBvcHVwU2V0dGluZ3MsXG4gIHByb2ZpbGVTZXR0aW5ncyxcbiAgY2FyZHNTZXR0aW5ncyxcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcblxuXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XG4gIG5hbWVTZWxlY3RvcjogcHJvZmlsZVNldHRpbmdzLnByb2ZpbGVUaXRsZSxcbiAgam9iU2VsZWN0b3I6IHByb2ZpbGVTZXR0aW5ncy5wcm9maWxlRGVzY3JpcHRpb24sXG59KTtcblxuY29uc3QgcmVuZGVyQ2FyZCA9IChkYXRhKSA9PiB7XG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChkYXRhLCBjYXJkc1NldHRpbmdzLmNhcmRTZWxlY3RvciwgKCkgPT4ge1xuICAgIGltYWdlUG9wdXAub3BlbihkYXRhKTtcbiAgfSk7XG4gIHJldHVybiBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xufTtcblxuY29uc3QgY2FyZHNMaXN0ID0gbmV3IFNlY3Rpb24oXG4gIHtcbiAgICBpdGVtczogaW5pdGlhbENhcmRzLFxuICAgIHJlbmRlcmVyOiAoZGF0YSkgPT4gY2FyZHNMaXN0LmFkZEl0ZW0ocmVuZGVyQ2FyZChkYXRhKSlcbiAgfSxcbiAgY2FyZHNTZXR0aW5ncy5wbGFjZVNlY3Rpb25cbik7XG5cbmNvbnN0IGltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UocG9wdXBTZXR0aW5ncy5pbWFnZVdpbmRvdyk7XG5cbmNvbnN0IHVzZXJJbmZvUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XG4gIHBvcHVwU2VsZWN0b3I6IHBvcHVwU2V0dGluZ3MuZWRpdEZvcm1XaW5kb3csXG4gIGhhbmRsZUZvcm1TdWJtaXQ6IChkYXRhKSA9PiB7XG4gICAgdXNlckluZm9Qb3B1cC5jbG9zZSgpO1xuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKGRhdGEpO1xuICB9LFxufSk7XG5cbmNvbnN0IG5ld0NhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgcG9wdXBTZWxlY3RvcjogcG9wdXBTZXR0aW5ncy5jYXJkRnJvbVdpbmRvdyxcbiAgaGFuZGxlRm9ybVN1Ym1pdDogKGRhdGEpID0+IHtcbiAgICBjYXJkc0xpc3QuYWRkSXRlbShyZW5kZXJDYXJkKGRhdGEpKTtcbiAgICBuZXdDYXJkUG9wdXAuY2xvc2UoKTtcbiAgfSxcbn0pO1xuY2FyZHNMaXN0LnJlbmRlckl0ZW1zKCk7XG5cbmNvbnN0IHByb2ZpbGVGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3Ioc2V0dGluZ3MsIHVzZXJJbmZvUG9wdXAucG9wdXBFbGVtZW50KTtcbmNvbnN0IHBsYWNlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHNldHRpbmdzLCBuZXdDYXJkUG9wdXAucG9wdXBFbGVtZW50KTtcblxuXG5pbWFnZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG51c2VySW5mb1BvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5uZXdDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxucHJvZmlsZUZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xucGxhY2VGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuY29uc3Qgb3BlblByb2ZpbGVGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19idG4tZWRpdFwiKTtcbmNvbnN0IG9wZW5QbGFjZUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2J0bi1hZGRcIik7XG5jb25zdCBvcGVuUHJvZmlsZVdpdGhJbmZvID0gKCkgPT4ge1xuICB1c2VySW5mb1BvcHVwLm9wZW4oKTtcbiAgdXNlckluZm9Qb3B1cC5zZXRGb3JtRGF0YSh1c2VySW5mby5nZXRVc2VySW5mbygpKTtcbiAgcHJvZmlsZUZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG59XG5cbm9wZW5Qcm9maWxlRm9ybS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9wZW5Qcm9maWxlV2l0aEluZm8pO1xuXG5jb25zdCBvcGVuRW1wdHlQbGFjZSA9ICgpID0+IHtcbiAgICBuZXdDYXJkUG9wdXAub3BlbigpO1xuICAgIHBsYWNlRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcbn1cbm9wZW5QbGFjZUZvcm0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvcGVuRW1wdHlQbGFjZSk7IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3Rvciwgam9iU2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX25hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xuICAgIHRoaXMuX2pvYkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpvYlNlbGVjdG9yKTtcbiAgfVxuICBcbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgY29uc3QgdXNlckRhdGEgPSB7XG4gICAgICB1c2VyTmFtZTogdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQsXG4gICAgICB1c2VyVGl0bGU6IHRoaXMuX2pvYkVsZW1lbnQudGV4dENvbnRlbnQsXG4gICAgfTtcblxuICAgIHJldHVybiB1c2VyRGF0YTtcbiAgfVxuXG4gIHNldFVzZXJJbmZvID0gKGRhdGEpID0+IHtcbiAgICB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IGRhdGEudXNlck5hbWU7XG4gICAgdGhpcy5fam9iRWxlbWVudC50ZXh0Q29udGVudCA9IGRhdGEudXNlclRpdGxlO1xuICB9O1xufVxuXG4gICAgICAgICIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIHJlbmRlckl0ZW1zKCkge1xuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goaXRlbSA9PiB0aGlzLl9yZW5kZXJlcihpdGVtKSk7XG4gIH1cbiAgXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICB9XG59XG5cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcblxuICBvcGVuID0gKHsgbGluaywgbmFtZSB9KSA9PiB7XG4gICAgY29uc3QgaW1hZ2VDYXB0aW9uID0gdGhpcy5wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZGVzY3JpcHRpb25cIik7XG4gICAgY29uc3QgaW1hZ2VFbGVtZW50ID0gdGhpcy5wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1nXCIpO1xuXG4gICAgaW1hZ2VFbGVtZW50LnNyYyA9IGxpbms7XG4gICAgaW1hZ2VFbGVtZW50LmFsdCA9IG5hbWU7XG4gICAgaW1hZ2VDYXB0aW9uLnRleHRDb250ZW50ID0gbmFtZTtcblxuICAgIHN1cGVyLm9wZW4oKTtcbiAgfTtcbn1cblxuIl0sIm5hbWVzIjpbIkNhcmQiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJjYXJkU2VsZWN0b3IiLCJvbkltYWdlQ2xpY2siLCJ0aGlzIiwiX3RpdGxlIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9jYXJkU2VsZWN0b3IiLCJfb25JbWFnZUNsaWNrIiwiX2dldFRlbXBsYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9oYW5kbGVEZWxldGVDYXJkQnV0dG9uIiwiX2VsZW1lbnQiLCJyZW1vdmUiLCJfaGFuZGxlTGlrZUJ1dHRvbiIsImNsYXNzTGlzdCIsInRvZ2dsZSIsIl9oYW5kbGVQcmV2aWV3SW1hZ2UiLCJ0aXRsZSIsIl9zZXRFdmVudExpc3RlbmVycyIsImFkZEV2ZW50TGlzdGVuZXIiLCJnZW5lcmF0ZUNhcmQiLCJjYXJkSW1nIiwidGV4dENvbnRlbnQiLCJzcmMiLCJhbHQiLCJGb3JtVmFsaWRhdG9yIiwic2V0dGluZ3MiLCJmb3JtRWxlbWVudCIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvck1lc3NhZ2VDbGFzcyIsImVycm9yTWVzc2FnZUNsYXNzIiwiX2J1dHRvbiIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfaGlkZUlucHV0RXJyb3IiLCJpbnB1dEVsZW1lbnQiLCJlcnJvckVsZW1lbnQiLCJpZCIsIl9zaG93SW5wdXRFcnJvciIsImFkZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaXNGb3JtVmFsaWQiLCJzb21lIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiZGlzYWJsZWQiLCJmb3JFYWNoIiwicmVzZXRWYWxpZGF0aW9uIiwiaW5wdXRMaXN0IiwiZW5hYmxlVmFsaWRhdGlvbiIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiZm9ybVNlbGVjdG9yIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwicG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzY1VwIiwiYmluZCIsImNsb3NlIiwib3BlbiIsImtleSIsInNldEV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9nZXRJbnB1dFZhbHVlcyIsIl9mb3JtIiwicmVzZXQiLCJpbnB1dHMiLCJpbnB1dFZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJfZm9ybVN1Ym1pdCIsInNldEZvcm1EYXRhIiwidXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJqb2JTZWxlY3RvciIsIl9uYW1lRWxlbWVudCIsInVzZXJOYW1lIiwiX2pvYkVsZW1lbnQiLCJ1c2VyVGl0bGUiLCJnZXRVc2VySW5mbyIsInJlbmRlckNhcmQiLCJpbWFnZVBvcHVwIiwiY2FyZHNMaXN0IiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwiaXRlbSIsImFkZEl0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsImltYWdlQ2FwdGlvbiIsImltYWdlRWxlbWVudCIsInVzZXJJbmZvUG9wdXAiLCJzZXRVc2VySW5mbyIsIm5ld0NhcmRQb3B1cCIsInByb2ZpbGVGb3JtVmFsaWRhdG9yIiwicGxhY2VGb3JtVmFsaWRhdG9yIiwib3BlblByb2ZpbGVGb3JtIiwib3BlblBsYWNlRm9ybSJdLCJzb3VyY2VSb290IjoiIn0=